name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
    
      # Clean up disk space
      - name: Clean up temporary files and caches
        run: |
          echo "Cleaning up temporary files and caches..."
          sudo rm -rf /tmp/*
          sudo apt-get clean
          sudo rm -rf /var/cache/apt/archives/*
          sudo rm -rf ~/.cache/unity
          sudo rm -rf ~/.local/share/unity3d/*
          sudo docker system prune -af
          sudo docker volume prune -f
          sudo docker network prune -f
          sudo docker image prune -af
          sudo rm -rf /var/log/*
          
      - name: Clean /mnt directory
        run: |
          echo "Cleaning up /mnt directory..."
          sudo rm -rf /mnt/*

      # Maximize build space
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build
